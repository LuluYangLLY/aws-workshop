AWSTemplateFormatVersion: 2010-09-09
Parameters:
  BucketName:
    Type: String
  DomainName:
    Type: String
  HostedZoneId:
    Type: String
  ACLDefaultAction:
    Type: String
    Default: BLOCK
  AllowedOrigins:
    Type: CommaDelimitedList
Resources:
  BoBoCert:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref DomainName
      DomainValidationOptions:
        - DomainName: !Ref DomainName
          HostedZoneId: !Ref HostedZoneId
      ValidationMethod: DNS
  BoBoCloudFrontOriginAccessIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: bobo-cloudfront
  BoBoBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BoBoBucket
      PolicyDocument:
        Statement:
          - Sid: Grant GET ingress to Cloud Front CND only
            Effect: Allow
            Principal:
              CanonicalUser: !GetAtt BoBoCloudFrontOriginAccessIdentity.S3CanonicalUserId
            Action:
              - s3:GetObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref BucketName
                - /*
  BoBoBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: Private
      BucketName: !Ref BucketName
      CorsConfiguration:
        CorsRules:
          - AllowedMethods:
              - GET
            AllowedOrigins:
              - !Ref AllowedOrigins
            MaxAge: 3600
  BoBoCFDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
            Headers:
              - Origin
              - Access-Control-Request-Headers
              - Access-Control-Request-Method
          TargetOriginId: !Ref BoBoBucket
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
        DefaultRootObject: index.html
        HttpVersion: http2
        Enabled: true
        Origins:
          - DomainName: !Join
              - ''
              - - !Ref BucketName
                - .s3.amazonaws.com
            Id: !Ref BoBoBucket
            S3OriginConfig:
              OriginAccessIdentity: !Join
                - ''
                - - origin-access-identity/cloudfront/
                  - !Ref BoBoCloudFrontOriginAccessIdentity
        PriceClass: PriceClass_All
        WebACLId: !Ref WebACL
        ViewerCertificate:
          SslSupportMethod: sni-only
          AcmCertificateArn: !Ref BoBoCert
          MinimumProtocolVersion: TLSv1.2_2021
    DependsOn:
      - BoBoCert
      - BoBoBucket
      - BoBoCloudFrontOriginAccessIdentity
  BoBoRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref DomainName
      Type: A
      HostedZoneId: !Ref HostedZoneId
      AliasTarget:
        DNSName: !GetAtt BoBoCFDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2
  IPSetWhiteList:
    Type: AWS::WAF::IPSet
    Properties:
      Name: "IPSet for whiteListed IP addresses"
      IPSetDescriptors:
        - Type: IPV4
          Value: x.x.x.x/28
        - Type: IPV4
          Value: x.x.x.x/30
  IPSetRule:
    Type: AWS::WAF::Rule
    Properties:
      MetricName: XXCompanyIPSetRule
      Name: XXCompanyIPSetRule
      Predicates:
        - DataId: !Ref IPSetWhiteList
          Negated: false
          Type: IPMatch
  WebACL:
    Type: AWS::WAF::WebACL
    Properties:
      Name: "Web ACL to allow the given IPSet"
      MetricName: WebACL
      DefaultAction:
        Type: !Ref ACLDefaultAction
      Rules:
        - Priority: 1
          RuleId: !Ref IPSetRule
          Action: Type: ALLOW
      